[% META title="Browse Crisprs" %]
<div class="page-header">
  <h1>[%- genes -%] 
  <small>[% IF design_id %]design: <strong>[%design_id%]</strong>[% END %]
  chr: [%- chromosome -%]
  assembly: [%- genome -%]</small>
  </h1>
</div>

<form action="[% c.uri_for( '/genoverse_browse' ) %]" class="well">
  <input type="hidden" name="genome" value=[%genome%] />
  <input type="hidden" name="chromosome" value=[%chromosome%] />
  <input id="browse_start" type="hidden" name="browse_start" value=[%browse_start%] />
  <input id="browse_end" type="hidden" name="browse_end" value=[%browse_end%] />
  <input type="hidden" name="genes" value="[%genes%]" />
  [% IF design_id %]<input type="hidden" name="design_id" value=[%design_id%] />[% END %]

  <table class='table'>
   <thead>
    <tr>
     <th>Single Crisprs</th><th>Paired Crisprs</th><th>Designs</th>
     <th><p id="crispr_filters_heading" [% UNLESS view_single OR view_paired %]class="muted"[% END %]>Crispr Filters</th>
     <th><p id="crispr_ot_filters_heading" [% UNLESS view_single OR view_paired %]class="muted"[% END %]>Crispr Off-Target Filters</th>
    </tr>
   </thead>
   <tbody>
    <tr>
      <td>
        <input id="show_single" type="radio" name="view_single" value="1" [% IF view_single %]checked[% END %]>
        Show</input>
        <br />
        <input id="hide_single" type="radio" name="view_single" value="0"  [% IF not view_single %]checked[% END %]>
        Hide</input>
      </td>
      <td>
        <input id="show_paired" type="radio" name="view_paired" value="1" [% IF view_paired %]checked[% END %]>
        Show</input>
        <br />
        <input id="hide_paired" type="radio" name="view_paired" value="0" [% IF not view_paired %]checked[% END %]>
        Hide</input>
      </td>
      <td>
        <input id="show_designs" type="radio" name="view_designs" value="1" checked>
        Show</input>
        <br />
        <input id="hide_designs" type="radio" name="view_designs" value="0" >
        Hide</input>
      </td>
      <td>
       <fieldset name="crispr_filters" [% UNLESS view_paired OR view_single %]disabled[% END %]>
        <input type="radio" name="crispr_filter" value="all" [% IF crispr_filter == 'all'  or not crispr_filter %]checked[% END %]>
        Show All</input>
        <br />
        <input type="radio" name="crispr_filter" value="exonic" [% IF crispr_filter == 'exonic' %]checked[% END %]>
        Exon Only</input>
        <br />
        <input type="radio" name="crispr_filter" value="exon_flanking" [% IF crispr_filter == 'exon_flanking' %]checked[% END %]>
        Exon Flanking Only</input>
        <br />
        Flanking region: <br/><input type="number" id="flank_size" name="flank_size" value="[% flank_size OR 100 %]" min="1" max="1000" style="width: 60px"/>
       </fieldset>
      </td>
      <td>
        <fieldset name="crispr_ot_filters" [% UNLESS view_paired OR view_single %]disabled[% END %]>
         Maximum number of off-targets with:<br />
         0 mismatches <input type="number" name="0_mismatch" id="0_mismatch" min="1" step="1" style="width: 60px"></input><br />
         1 mismatches <input type="number" name="1_mismatch" id="1_mismatch" min="0" step="1" style="width: 60px"></input><br />
         2 mismatches <input type="number" name="2_mismatch" id="2_mismatch" min="0" step="1" style="width: 60px"></input><br />
         3 mismatches <input type="number" name="3_mismatch" id="3_mismatch" min="0" step="1" style="width: 60px"></input><br />
         4 mismatches <input type="number" name="4_mismatch" id="4_mismatch" min="0" step="1" style="width: 60px"></input><br />
         <button type="button" class="btn btn-default" id="apply_ot_filters">Apply Off-Target Filters</button>
         </fieldset>
      </td>     
    </tr>
  </tbody>
  </table>
</form>      

<script type="text/javascript">
  
  // Functions to show and hide sets of tracks
  function hide_single (){
    var crisprs = $.grep( $(window)[0].genoverse.tracks, function(n,i){ return n.name == "Crisprs" });
    $(window)[0].genoverse.removeTrack(crisprs[0]);
    var bookmarked = $.grep( $(window)[0].genoverse.tracks, function(n,i){ return n.name == "Bookmarked Crisprs" });
    if(bookmarked[0]){
      $(window)[0].genoverse.removeTrack(bookmarked[0]);
    }
  }

  function show_single (){
      // Insert the tracks at position 3, just below genes track (assuming user has not closed gene and sequence tracks..)
      var crisprs = $.grep( $(window)[0].genoverse.tracksLibrary, function(n,i){ return n.name == "Crisprs" });
      var bookmarked = $.grep( $(window)[0].genoverse.tracksLibrary, function(n,i){ return n.name == "Bookmarked Crisprs" });
      if(bookmarked[0]){
       $(window)[0].genoverse.addTrack(
        Genoverse.Track.extend($.extend(true, {},bookmarked[0])),3);
      }
      $(window)[0].genoverse.addTrack(
        Genoverse.Track.extend($.extend(true, {},crisprs[0])),3);
      enable_filters();
  }

  function hide_paired (){
      var crisprs = $.grep( $(window)[0].genoverse.tracks, function(n,i){ return n.name == "Crispr Pairs" });
      $(window)[0].genoverse.removeTrack(crisprs[0]);
      var bookmarked = $.grep( $(window)[0].genoverse.tracks, function(n,i){ return n.name == "Bookmarked Crispr Pairs" });
      if(bookmarked[0]){
        $(window)[0].genoverse.removeTrack(bookmarked[0]);
      }
  }

  function show_paired (){
      // Insert the tracks at position 3, just below genes track (assuming user has not closed gene and sequence tracks..)
      var crisprs = $.grep( $(window)[0].genoverse.tracksLibrary, function(n,i){ return n.name == "Crispr Pairs" });
      var bookmarked = $.grep( $(window)[0].genoverse.tracksLibrary, function(n,i){ return n.name == "Bookmarked Crispr Pairs" });
      if(bookmarked[0]){
       $(window)[0].genoverse.addTrack(
        Genoverse.Track.extend($.extend(true, {},bookmarked[0])),3);
      }
      $(window)[0].genoverse.addTrack(
        Genoverse.Track.extend($.extend(true, {},crisprs[0])),3);
      enable_filters();
  }

  function hide_designs (){
      var design_track = get_track('Designs');
      $(window)[0].genoverse.removeTrack(design_track);
  }

  function show_designs (){
      // Insert the tracks at position 3, just below genes track (assuming user has not closed gene and sequence tracks..)
      var crisprs = $.grep( $(window)[0].genoverse.tracksLibrary, function(n,i){ return n.name == "Designs" });

      $(window)[0].genoverse.addTrack(
        Genoverse.Track.extend($.extend(true, {},crisprs[0])),3);
  }

  function get_track(name){
    return $(window)[0].genoverse.tracksById[name];
  }

  function enable_filters(){
      $("[name='crispr_filters']")[0].disabled = false;
      $("#crispr_filters_heading")[0].className = "";
      $("[name='crispr_ot_filters")[0].disabled = false;
      $("#crispr_ot_filters_heading")[0].className = "";
  }

  function apply_ot_filters(){
    var ot_profile = {};
    for (var mismatch_number = 0; mismatch_number < 5; mismatch_number++){
      var input_id = '#' + mismatch_number + '_mismatch';
      var input = $(input_id)[0];
      var value = input.value;
      if (value !== ""){
        ot_profile[mismatch_number] = value;
      }
    }

    var track = genoverse.tracksById['Filtered Crisprs'];
    track.ot_profile = ot_profile;
    track.controller.resetImages();
    track.controller.imgContainers.empty();
    track.controller.makeFirstImage();
  }

  $(document).ready( function() {

    // All tracks are loaded by default on page refresh
    // Hide the ones we don't want to see
    // We are doing it this way because using the hidden attribute
    // on the genoverse tracks caused "call stack size exceeded" error
    Genoverse.on('afterInit', function () {
      if($("#hide_single")[0].checked == true){
        hide_single();
      }
      
      if($("#hide_paired")[0].checked == true){
        hide_paired();
      }
 
       if($("#hide_designs")[0].checked == true){
        hide_designs();
      }     
      var spinner = "[% c.uri_for( '/static/images/spinner-circle.gif' ) %]";

      // override the 'makeMenu' method in order to add bookmarking buttons
      // and necessary click handlers
      var old_makeMenu = $(window)[0].genoverse.makeMenu;
      
      $(window)[0].genoverse.makeMenu = function (feature, event, track) {
        console.log(feature);
        // run existing makeMenu code to create popup
        old_makeMenu.apply(this, arguments);
        console.log(feature.menuEl);

        // append the bookmarking button to the popup        
        var settings;
        if(feature.type == 'Crispr'){
          console.log('this is a crispr - adding bookmark button');
          settings = {
             'id'           : feature.name,
             'type'         : 'Crispr',
             'status_uri'   : "[% c.uri_for('/crispr_bookmark_status') %]",
             'bookmark_uri' : "[% c.uri_for('/bookmark_crispr') %]",
             'spinner'      : spinner,
             'bookmark_track' : get_track('Bookmarked Crisprs')
          };
          add_bookmark_button(feature.menuEl,settings);
        }
        else if(feature.type == 'crispr_pair'){
          console.log('this is a crispr pair - adding bookmark button');
          settings = {
             'id'           : feature.name,
             'type'         : 'Crispr Pair',
             'status_uri'   : "[% c.uri_for('/crispr_pair_bookmark_status') %]",
             'bookmark_uri' : "[% c.uri_for('/bookmark_crispr_pair') %]",
             'spinner'      : spinner,
             'bookmark_track' : get_track('Bookmarked Crispr Pairs')
          };
          add_bookmark_button(feature.menuEl,settings);          
        }
      };
    });

    // Handle clicks on the show/hide radio inputs
    $("#hide_single").change(function (event){
      hide_single();
    });
    
    $("#show_single").change(function (event){
      show_single();
    });

    $("#hide_paired").change(function (event){
      hide_paired();
    });
    
    $("#show_paired").change(function (event){
      show_paired();
    });

    $("#hide_designs").change(function (event){
      hide_designs();
    });
    
    $("#show_designs").change(function (event){
      show_designs();
    });

    $("#flank_size").keypress(function (event){
      if(event.which == 13){
        // enter key was pressed
        $("#browse_start")[0].value = $(window)[0].genoverse.start + 200;
        $("#browse_end")[0].value = $(window)[0].genoverse.end - 200;
        this.form.submit();
      }
    });

    $('input[name=crispr_filter]').click(function (event){
      $("#browse_start")[0].value = $(window)[0].genoverse.start + 200;
      $("#browse_end")[0].value = $(window)[0].genoverse.end - 200;
      this.form.submit();
    });

    $("#apply_ot_filters").click(function (event){
      apply_ot_filters();
    });
  });
</script>

    <script type="text/javascript" src="[% c.uri_for('/static/genoverse/js/genoverse.wtsi.js')%]">
       {
        container : '#genoverse', // Where to inject Genoverse (css/jQuery selector)
        // If no genome supplied, it must have at least chromosomeSize, e.g.:
        // chromosomeSize : 249250621, // chromosome 1, human
        [% USE String(genome) %]
        genome    : '[% String.lower() %]', // see js/genomes/
        chr       : '[% chromosome %]',
        start     : [% browse_start %] - 200,
        end       : [% browse_end %] + 200,
        plugins   : [ 'controlPanel_no_tracks_menu', 'karyotype', 'trackControls', 'resizer', 'fileDrop' ],
        tracks    : [
          Genoverse.Track.Scalebar,
          Genoverse.Track.extend({
            name      : 'Sequence',
            [% IF genome == 'GRCm38' %]
            url       : 'http://beta.rest.ensembl.org/sequence/region/mouse/__CHR__:__START__-__END__?content-type=text/plain',
            [% END %]             
            model     : Genoverse.Track.Model.Sequence.Ensembl,
            view      : Genoverse.Track.View.Sequence,
            resizable : 'auto',
            100000    : false,
            controls  : 'off',
            unsortable : true
          }),
          Genoverse.Track.extend({
            name   : 'Genes',
            //FIXME: should pass species to this template so we do not rely on assembly
            [% IF genome == 'GRCm38' %]
            url    : 'http://beta.rest.ensembl.org/feature/region/mouse/__CHR__:__START__-__END__?feature=gene;content-type=application/json',
            [% END %]
            height : 200,
            controls  : 'off',
            unsortable : true,
            info   : 'Ensembl API genes & transcripts, see <a href="http://beta.rest.ensembl.org/" target="_blank">beta.rest.ensembl.org</a> for more details',
            
            // Different settings for different zoom level
            2000000: { // This one applies when > 2M base-pairs per screen
              labels : false
            },
            100000: { // more than 100K but less then 2M
              labels : true,
              model  : Genoverse.Track.Model.Gene.Ensembl,
              view   : Genoverse.Track.View.Gene.Ensembl
            },
            1: { // > 1 base-pair, but less then 100K
              labels : true,
              model  : Genoverse.Track.Model.Transcript.Ensembl,
              view   : Genoverse.Track.View.Transcript.Ensembl
            },
            populateMenu : function (feature) {            
              var atts = {
                ID     : feature.id,
                Name   : feature.external_name,
                Description : feature.description,
                Parent : feature.Parent,                
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand,
                Type   : feature.feature_type,
                Biotype: feature.biotype,
                Source : feature.source,
                Logic  : feature.logic_name
              };
              return atts;
            }              
          }),          
          Genoverse.Track.extend({
            name      : 'Designs',
            id        : 'Designs',
            url       : "[% c.uri_for('/api/designs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]" ,
            model     : Genoverse.Track.Model.Transcript.GFF3,
            view      : Genoverse.Track.View.Transcript,
            height    : 50,

            populateMenu : function (feature) {
              var link = "<a href='[%c.uri_for('/view_gibson_design')%]?design_id=" + feature.name
                                + "' target='_blank'><font color='#00FFFF'>Design Report</font></a>";           
              var atts = {
                ID     : feature.id,
                url    : link,
                Type   : feature.type,
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand
              };
              return atts;
            }            
          }),
[% IF c.user %]
          Genoverse.Track.extend({
            id        : 'Bookmarked Crisprs',
            name      : 'Bookmarked Crisprs',
            url       : "[% c.uri_for('/api/crisprs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]&crispr_filter=[%crispr_filter%]&flank_size=[%flank_size%]&bookmarked_only=1" ,
            model     : Genoverse.Track.Model.Transcript.GFF3,
            view      : Genoverse.Track.View.Transcript,
            autoHeight : true,
            height    : 150,
            labels    : false,
            threshold : 3000,
            messages  : { threshold : 'Crisprs not displayed for regions larger than ' },

            populateMenu : function (feature) {
              var report_link = "<a href='[%c.uri_for('/crispr')%]/" + feature.name 
                                + "' target='_blank'><font color='#00FFFF'>Crispr Report</font></a>";
              var atts = {
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand,
                Name   : feature.name,
                URL : report_link
              };
              if (feature.ot_summary){
                atts['Off-Targets'] = feature.ot_summary;
              }
              else {
                atts['Off-Targets'] = 'not computed';
              }
              return atts;
            }

          }),
[% END %]
          Genoverse.Track.extend({
            name      : 'Filtered Crisprs',
            id        : 'Filtered Crisprs',
            url       : "[% c.uri_for('/api/crisprs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]&crispr_filter=[%crispr_filter%]&flank_size=[%flank_size%]" ,
            model     : Genoverse.Track.Model.Transcript.GFF3,
            ot_profile : {},
            view      : Genoverse.Track.View.Transcript.extend({
              drawFeature: function (feature, featureContext, labelContext, scale) {
              // only draw the feature if it has an off-target summary
                if(feature.ot_summary){
                  var ot_summary = feature.ot_summary;
                  // Quote keys in JSON string
                  var new_ot_summary = ot_summary.replace(/(\d{1}):/g,"\"$1\":");
                  var off_targets = jQuery.parseJSON(new_ot_summary);
                  var ot_profile = this.track.ot_profile;
                  if( this.fitsOTProfile(off_targets,ot_profile) ){
                    this.base.apply(this, arguments);
                  }
                }
              },

              fitsOTProfile: function (ot_summary, ot_profile){
                  for (var mismatch_number = 0; mismatch_number < 5; mismatch_number++){
                    if (mismatch_number in ot_profile){
                      // Check it
                      if (ot_summary[mismatch_number] <= ot_profile[mismatch_number]){
                        // It fits - continue loop to check next number of mismatches
                      }
                      else{
                        return false;
                      }
                    }
                    else{
                      // This mismatch number is not included in the ot_profile so we
                      // assume any number of off-targets in this category is ok
                    }
                  }
                  // If we completed the loop then the summary fits the profile
                  return true;
              },

            }),
            autoHeight : true,
            height    : 150,
            labels    : false,
            threshold : 3000,
            messages  : { threshold : 'Crisprs not displayed for regions larger than ' },

            populateMenu : function (feature) {
              var report_link = "<a href='[%c.uri_for('/crispr')%]/" + feature.name 
                                + "' target='_blank'><font color='#00FFFF'>Crispr Report</font></a>";
              var atts = {
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand,
                Name   : feature.name,
                URL : report_link
              };
              if (feature.ot_summary){
                atts['Off-Targets'] = feature.ot_summary;
              }
              else {
                atts['Off-Targets'] = 'not computed';
              }
              return atts;
            }

          }),
          Genoverse.Track.extend({
            name      : 'Crisprs',
            id        : 'Crisprs',
            url       : "[% c.uri_for('/api/crisprs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]&crispr_filter=[%crispr_filter%]&flank_size=[%flank_size%]" ,
            model     : Genoverse.Track.Model.Transcript.GFF3,
            view      : Genoverse.Track.View.Transcript,
            autoHeight : true,
            height    : 150,
            labels    : false,
            threshold : 3000,
            messages  : { threshold : 'Crisprs not displayed for regions larger than ' },

            populateMenu : function (feature) {
              var report_link = "<a href='[%c.uri_for('/crispr')%]/" + feature.name 
                                + "' target='_blank'><font color='#00FFFF'>Crispr Report</font></a>";
              var atts = {
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand,
                Name   : feature.name,
                URL : report_link
              };
              if (feature.ot_summary){
                atts['Off-Targets'] = feature.ot_summary;
              }
              else {
                atts['Off-Targets'] = 'not computed';
              }
              return atts;
            }

          }),

[% IF c.user %]
          Genoverse.Track.extend({
            id        : 'Bookmarked Crispr Pairs',
            name      : 'Bookmarked Crispr Pairs',
            url       : "[% c.uri_for('/api/crispr_pairs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]&crispr_filter=[%crispr_filter%]&flank_size=[%flank_size%]&bookmarked_only=1" ,
            model     : Genoverse.Track.Model.Transcript.GFF3,
            view      : Genoverse.Track.View.Transcript,
            autoHeight : true,
            height    : 150,
            labels    : false,
            threshold : 3000,
            messages  : { threshold : 'Crispr pairs not displayed for regions larger than ' },

            populateMenu : function (feature) {
              var report_link = "<a href='[%c.uri_for('/crispr_pair')%]/" 
                                + feature.name 
                                + "?spacer=" + feature.spacer
                                + "' target='_blank'><font color='#00FFFF'>Crispr Pair Report</font></a>";              
              var atts = {
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand,
                Spacer : feature.spacer,
                Name   : feature.name,
                URL    : report_link,
                'Off-Targets: Pairs' : feature.ot_summary || 'not computed',
                Left   : feature.left_ot_summary,
                Right  : feature.right_ot_summary
              };
              return atts;              
            }
          }),
[% END %]
          Genoverse.Track.extend({
            name      : 'Crispr Pairs',
            id        : 'Crispr Pairs',
            url       : "[% c.uri_for('/api/crispr_pairs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]&crispr_filter=[%crispr_filter%]&flank_size=[%flank_size%]" ,
            model     : Genoverse.Track.Model.Transcript.GFF3,
            view      : Genoverse.Track.View.Transcript,
            autoHeight : true,
            height    : 150,
            labels    : false,
            threshold : 3000,
            messages  : { threshold : 'Crispr pairs not displayed for regions larger than ' },

            populateMenu : function (feature) {
              var report_link = "<a href='[%c.uri_for('/crispr_pair')%]/" 
                                + feature.name 
                                + "?spacer=" + feature.spacer
                                + "' target='_blank'><font color='#00FFFF'>Crispr Pair Report</font></a>";              
              var atts = {
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand,
                Spacer : feature.spacer,
                Name   : feature.name,
                URL    : report_link,
                'Off-Targets: Pairs' : feature.ot_summary || 'not computed',
                Left   : feature.left_ot_summary,
                Right  : feature.right_ot_summary
              };
              return atts;              
            }
          }),

          Genoverse.Track.Scaleline
        ]
      }
    </script>
    
    <div id="genoverse" class="span12"></div>

    <strong>Crispr Colour Key:</strong>

      <div class="span6">
       <div style="background: [%colours.left_crispr%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 30px">Off-targets computed</div>

       <div style="background: [%colours.left_in_design%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 30px">Off-targets computed and crispr within a design</div>

       <div style="background: [%colours.no_ot_summary%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 30px">Off-targets not computed</div>

       <div style="background: [%colours.left_crispr%]; width: 20px; height: 20px; float: left"></div>
       <div style="background: [%colours.right_crispr%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 50px">Crispr pair</div>

       <div style="background: [%colours.left_in_design%]; width: 20px; height: 20px; float: left"></div>
       <div style="background: [%colours.right_in_design%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 50px">Crispr pair within a design</div>

    </div>
