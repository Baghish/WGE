[% META title="Browse Crisprs" %]
<div class="page-header">
  <h1>[%- genes -%] 
  <small>[% IF design_id %]design: <strong>[%design_id%]</strong>[% END %]
  chr: [%- chromosome -%]
  assembly: [%- genome -%]</small>
  </h1>
</div>

<div class="row">
<div class="span9">
<form action="[% c.uri_for( '/genoverse_browse' ) %]" class="well">
  <input type="hidden" name="genome" value=[%genome%] />
  <input type="hidden" name="chromosome" value=[%chromosome%] />
  <input id="browse_start" type="hidden" name="browse_start" value=[%browse_start%] />
  <input id="browse_end" type="hidden" name="browse_end" value=[%browse_end%] />
  <input type="hidden" name="genes" value="[%genes%]" />
  [% IF design_id %]<input type="hidden" name="design_id" value=[%design_id%] />[% END %]

  <table class='table'>
   <thead>
    <tr>
     <th>Single Crisprs</th><th>Paired Crisprs</th><th>Designs</th>
     <th><p id="crispr_filters_heading" [% UNLESS view_single OR view_paired %]class="muted"[% END %]>Crispr Filters</p></th>
     <th><p id="spacer_filters_heading" [% UNLESS view_paired %]class="muted"[% END %]>Spacer Filter</p></th>
    </tr>
   </thead>
   <tbody>
    <tr>
      <td>
        <input id="show_single" type="radio" name="view_single" value="1" [% IF view_single %]checked[% END %]>
        Show</input>
        <br />
        <input id="hide_single" type="radio" name="view_single" value="0"  [% IF not view_single %]checked[% END %]>
        Hide</input>
      </td>
      <td>
        <input id="show_paired" type="radio" name="view_paired" value="1" [% IF view_paired %]checked[% END %]>
        Show</input>
        <br />
        <input id="hide_paired" type="radio" name="view_paired" value="0" [% IF not view_paired %]checked[% END %]>
        Hide</input>
      </td>
      <td>
        <input id="show_designs" type="radio" name="view_designs" value="1" checked>
        Show</input>
        <br />
        <input id="hide_designs" type="radio" name="view_designs" value="0" >
        Hide</input>
      </td>
      <td>
       <fieldset name="crispr_filters" [% UNLESS view_paired OR view_single %]disabled[% END %]>
        <input type="radio" name="crispr_filter" value="all" [% IF crispr_filter == 'all'  or not crispr_filter %]checked[% END %]>
        Show All</input>
        <br />
        <input type="radio" name="crispr_filter" value="exonic" [% IF crispr_filter == 'exonic' %]checked[% END %]>
        Exon Only</input>
        <br />
        <input type="radio" name="crispr_filter" value="exon_flanking" [% IF crispr_filter == 'exon_flanking' %]checked[% END %]>
        Exon Flanking Only</input>
        <br />
        Flanking region: <br/><input type="number" id="flank_size" name="flank_size" value="[% flank_size OR 100 %]" min="1" max="1000" style="width: 60px"/>
       </fieldset>
      </td>
      <td>
       <fieldset name="spacer_filter" [% UNLESS view_paired %]disabled[% END %]>
         Crispr Pair Spacer Length (-10 to 30 bp)<br />
         Min Spacer Length <input type="number" name="spacer_min" id="spacer_min" min="-10" max="30" step="1" style="width: 60px"></input> bp<br />
         Max Spacer Length <input type="number" name="spacer_max" id="spacer_max" min="-10" max="30" step="1" style="width: 60px"></input> bp<br /> 
         <button type="button" class="btn btn-default" id="apply_spacer_filter">Apply Spacer Filter</button>
       </fieldset>
      </td>  
    </tr>
  </tbody>
  </table>
</form>      
</div>
<div id="ot_filters_panel" class="span3">
<form  class="well">
  <table class='table'>
   <thead>
    <tr>
      <th>Off-Target Filters</th>
    </tr>
   </thead>
   <tbody>
    <tr>
      <td>
        <fieldset name="crispr_ot_filters" [% UNLESS view_paired OR view_single %]disabled[% END %]>
         Maximum number of off-targets with:<br />
         0 mismatch <input type="number" name="0_mismatch" id="0_mismatch" min="1" step="1" style="width: 60px"></input><span id="0_mismatch_no_max" class="help-inline"><small>no max</small></span><br />
         <p class="text-error" id="0_mismatch_input_error" style="display: none;">Enter 1 or more. There is always 1 perfect match to the crispr itself.</p>
         1 mismatch <input type="number" name="1_mismatch" id="1_mismatch" min="0" step="1" style="width: 60px"></input><span id="1_mismatch_no_max" class="help-inline"><small>no max</small></span><br />
         2 mismatch <input type="number" name="2_mismatch" id="2_mismatch" min="0" step="1" style="width: 60px"></input><span id="2_mismatch_no_max" class="help-inline"><small>no max</small></span><br />
         3 mismatch <input type="number" name="3_mismatch" id="3_mismatch" min="0" step="1" style="width: 60px"></input><span id="3_mismatch_no_max" class="help-inline"><small>no max</small></span><br />
         4 mismatch <input type="number" name="4_mismatch" id="4_mismatch" min="0" step="1" style="width: 60px"></input><span id="4_mismatch_no_max" class="help-inline"><small>no max</small></span><br />
         <button type="button" class="btn btn-default" id="apply_ot_filters">Apply Off-Target Filters</button>
         </fieldset>
      </td>
    </tr>
   </tbody>
  </table>
</form>
</div>
</div>

<script type="text/javascript">
  
  // Functions to show and hide sets of tracks
  function hide_tracks(track_ids){
      track_ids.map(function(id){
          var track = get_track(id);
          if(track){
            $(window)[0].genoverse.removeTrack(track);
          }
      });
  }

  function show_tracks(track_ids){
    // Insert the tracks at position 3, just below genes track (assuming user has not closed gene and sequence tracks..)
      track_ids.map(function(id){
          var track = get_library_track(id);
          if(track){
              $(window)[0].genoverse.addTrack(
                Genoverse.Track.extend($.extend(true, {},track)),3);  
          }
      });
  }

  function hide_single (){
      hide_tracks(["Crisprs","Filtered Crisprs","Bookmarked Crisprs"]);
  }

  function show_single (){
      show_tracks(["Crisprs","Filtered Crisprs","Bookmarked Crisprs"]);
      enable_filters();
  }

  function hide_paired (){
      hide_tracks(["Crispr Pairs","Filtered Crispr Pairs","Bookmarked Crispr Pairs"]);
  }

  function show_paired (){
      show_tracks(["Crispr Pairs","Filtered Crispr Pairs","Bookmarked Crispr Pairs"]);
      enable_filters();
  }

  function hide_designs (){
      hide_tracks(["Designs"]);
  }

  function show_designs (){
      show_tracks(["Designs"]);
  }

  function get_track(id){
    return $(window)[0].genoverse.tracksById[id];
  }

  function get_library_track(id){
    var tracks = $.grep( $(window)[0].genoverse.tracksLibrary, function(n,i){ return n.id== id });
    return tracks[0];
  }

  function enable_filters(){
      $("[name='crispr_filters']")[0].disabled = false;
      $("#crispr_filters_heading")[0].className = "";
      $("[name='crispr_ot_filters")[0].disabled = false;
      $("#crispr_ot_filters_heading")[0].className = "";
  }

  function apply_crispr_filters(){
      // FIXME: would be better to identify these by track class...
      var crispr_tracks = ['Crisprs','Filtered Crisprs','Bookmarked Crisprs',
                           'Crispr Pairs', 'Filtered Crispr Pairs', 'Bookmarked Crispr Pairs'];

      var crispr_filter = $('input[name=crispr_filter]:checked').val();
      var flank_size = $('#flank_size').val();

      // apply to visible tracks and reload them
      crispr_tracks.map(function (track_id){
        var track = get_track(track_id);
        if(track){
          track.urlParams.crispr_filter = crispr_filter;
          track.urlParams.flank_size = flank_size;
          track.reload();
        }
      });

      // apply to library tracks ready for them to be shown
      crispr_tracks.map(function (track_id){
        var track = get_library_track(track_id);
        if(track){
          track.urlParams.crispr_filter = crispr_filter;
          track.urlParams.flank_size = flank_size;
        }
      });
  }

  function apply_ot_filters(){
    var ot_profile = {};
    for (var mismatch_number = 0; mismatch_number < 5; mismatch_number++){
      var input_id = '#' + mismatch_number + '_mismatch';
      var input = $(input_id)[0];
      var value = input.value;
      if (value !== ""){
        ot_profile[mismatch_number] = value;
      }
    }

    var filtered_tracks = ['Filtered Crisprs', 'Filtered Crispr Pairs'];
    // apply to visible tracks
    filtered_tracks.map(function (track_id){
        var track = get_track(track_id);
        if(track){
            track.ot_profile = ot_profile;
            track.controller.resetImages();
            track.controller.imgContainers.empty();
            track.controller.makeFirstImage();
        }
    });

    // apply to library tracks
    filtered_tracks.map(function (track_id){
        var track = get_library_track(track_id);
        if(track){
            track.ot_profile = ot_profile;
        }
    });
  }

  function apply_spacer_filter(){
      var min = $('#spacer_min')[0].value;
      var max = $('#spacer_max')[0].value;
      var track = get_track('Filtered Crispr Pairs');
      if(track){
        if(min !== ""){
          track.spacer_min = parseInt(min);
        }
        if(max !== ""){
          track.spacer_max = parseInt(max);
        }
        track.controller.resetImages();
        track.controller.imgContainers.empty();
        track.controller.makeFirstImage();
      }

      var library_track = get_library_track('Filtered Crispr Pairs');
      if(library_track){
        if(min !== ""){
          track.spacer_min = parseInt(min);
        }
        if(max !== ""){
          track.spacer_max = parseInt(max);
        }        
      }
  }


  $(document).ready( function() {

    // All tracks are loaded by default on page refresh
    // Hide the ones we don't want to see
    // We are doing it this way because using the hidden attribute
    // on the genoverse tracks caused "call stack size exceeded" error
    Genoverse.on('afterInit', function () {
      if($("#hide_single")[0].checked == true){
        hide_single();
      }
      
      if($("#hide_paired")[0].checked == true){
        hide_paired();
      }
 
       if($("#hide_designs")[0].checked == true){
        hide_designs();
      }     
      var spinner = "[% c.uri_for( '/static/images/spinner-circle.gif' ) %]";

      // override the 'makeMenu' method in order to add bookmarking buttons
      // and necessary click handlers
      var old_makeMenu = $(window)[0].genoverse.makeMenu;
      
      $(window)[0].genoverse.makeMenu = function (feature, event, track) {
        console.log(feature);
        // run existing makeMenu code to create popup
        old_makeMenu.apply(this, arguments);
        console.log(feature.menuEl);

        // append the bookmarking button to the popup        
        var settings;
        if(feature.type == 'Crispr'){
          console.log('this is a crispr - adding bookmark button');
          settings = {
             'id'           : feature.name,
             'type'         : 'Crispr',
             'status_uri'   : "[% c.uri_for('/crispr_bookmark_status') %]",
             'bookmark_uri' : "[% c.uri_for('/bookmark_crispr') %]",
             'spinner'      : spinner,
             'bookmark_track' : get_track('Bookmarked Crisprs')
          };
          add_bookmark_button(feature.menuEl,settings);
        }
        else if(feature.type == 'crispr_pair'){
          console.log('this is a crispr pair - adding bookmark button');
          settings = {
             'id'           : feature.name,
             'type'         : 'Crispr Pair',
             'status_uri'   : "[% c.uri_for('/crispr_pair_bookmark_status') %]",
             'bookmark_uri' : "[% c.uri_for('/bookmark_crispr_pair') %]",
             'spinner'      : spinner,
             'bookmark_track' : get_track('Bookmarked Crispr Pairs')
          };
          add_bookmark_button(feature.menuEl,settings);          
        }
      };
    });

    $("#ot_filters_panel").draggable();

    // Handle clicks on the show/hide radio inputs
    $("#hide_single").change(function (event){
      hide_single();
    });
    
    $("#show_single").change(function (event){
      show_single();
    });

    $("#hide_paired").change(function (event){
      hide_paired();
    });
    
    $("#show_paired").change(function (event){
      show_paired();
    });

    $("#hide_designs").change(function (event){
      hide_designs();
    });
    
    $("#show_designs").change(function (event){
      show_designs();
    });

    $("#flank_size").keypress(function (event){
      if(event.which == 13){
        apply_crispr_filters();
        // enter key was pressed
        //$("#browse_start")[0].value = $(window)[0].genoverse.start + 200;
        //$("#browse_end")[0].value = $(window)[0].genoverse.end - 200;
        //this.form.submit();
      }
    });

    $('input[name=crispr_filter]').click(function (event){
      apply_crispr_filters();
      //$("#browse_start")[0].value = $(window)[0].genoverse.start + 200;
      //$("#browse_end")[0].value = $(window)[0].genoverse.end - 200;
      //this.form.submit();
    });

    $("#apply_ot_filters").click(function (event){
      apply_ot_filters();
    });

    $('#apply_spacer_filter').click(function (event){
      apply_spacer_filter();
    });

    // show/hide help messages when values are entered in mismatch counts
    $("[id$=mismatch]").bind('keyup mouseup',function (event){
        var help_span_id = "#" + this.id + "_no_max";
        if(this.value !== ""){
            $(help_span_id).hide();
        }
        else{
            $(help_span_id).show();
        }
        if(this.id == '0_mismatch'){
            if(this.value == "0"){
                $('#0_mismatch_input_error').show();
            }
            else{
                $('#0_mismatch_input_error').hide();
            }
        }
    }); 

  });
</script>

    <script type="text/javascript" src="[% c.uri_for('/static/genoverse/js/genoverse.wtsi.js', {i => 1} )%]"></script>
    <script type="text/javascript" src="[% c.uri_for('/static/js/genoverse_custom_tracks.js', {i => 2})%]"></script>
    <script>
       var genoverseConfig = {
        container : '#genoverse', // Where to inject Genoverse (css/jQuery selector)
        // If no genome supplied, it must have at least chromosomeSize, e.g.:
        // chromosomeSize : 249250621, // chromosome 1, human
        [% USE String(genome) %]
        genome    : '[% String.lower() %]', // see js/genomes/
        chr       : '[% chromosome %]',
        start     : [% browse_start %] - 200,
        end       : [% browse_end %] + 200,
        plugins   : [ 'controlPanel_no_tracks_menu', 'karyotype', 'trackControls', 'resizer', 'fileDrop' ],
        tracks    : [
          Genoverse.Track.Scalebar,
          Genoverse.Track.extend({
            name      : 'Sequence',
            [% IF genome == 'GRCm38' %]
            url       : 'http://beta.rest.ensembl.org/sequence/region/mouse/__CHR__:__START__-__END__?content-type=text/plain',
            [% END %]             
            model     : Genoverse.Track.Model.Sequence.Ensembl,
            view      : Genoverse.Track.View.Sequence,
            resizable : 'auto',
            100000    : false,
            controls  : 'off',
            unsortable : true
          }),
          Genoverse.Track.extend({
            name   : 'Genes',
            //FIXME: should pass species to this template so we do not rely on assembly
            [% IF genome == 'GRCm38' %]
            url    : 'http://beta.rest.ensembl.org/feature/region/mouse/__CHR__:__START__-__END__?feature=gene;content-type=application/json',
            [% END %]
            height : 200,
            controls  : 'off',
            unsortable : true,
            info   : 'Ensembl API genes & transcripts, see <a href="http://beta.rest.ensembl.org/" target="_blank">beta.rest.ensembl.org</a> for more details',
            
            // Different settings for different zoom level
            2000000: { // This one applies when > 2M base-pairs per screen
              labels : false
            },
            100000: { // more than 100K but less then 2M
              labels : true,
              model  : Genoverse.Track.Model.Gene.Ensembl,
              view   : Genoverse.Track.View.Gene.Ensembl
            },
            1: { // > 1 base-pair, but less then 100K
              labels : true,
              model  : Genoverse.Track.Model.Transcript.Ensembl,
              view   : Genoverse.Track.View.Transcript.Ensembl
            },
            populateMenu : function (feature) {            
              var atts = {
                ID     : feature.id,
                Name   : feature.external_name,
                Description : feature.description,
                Parent : feature.Parent,                
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand,
                Type   : feature.feature_type,
                Biotype: feature.biotype,
                Source : feature.source,
                Logic  : feature.logic_name
              };
              return atts;
            }              
          }),          
          Genoverse.Track.extend({
            name      : 'Designs',
            id        : 'Designs',
            url       : "[% c.uri_for('/api/designs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]" ,
            model     : Genoverse.Track.Model.Transcript.GFF3,
            view      : Genoverse.Track.View.Transcript,
            height    : 50,

            populateMenu : function (feature) {
              var link = "<a href='[%c.uri_for('/view_gibson_design')%]?design_id=" + feature.name
                                + "' target='_blank'><font color='#00FFFF'>Design Report</font></a>";           
              var atts = {
                ID     : feature.id,
                url    : link,
                Type   : feature.type,
                Start  : feature.start,
                End    : feature.end,
                Strand : feature.strand
              };
              return atts;
            }            
          }),
[% IF c.user %]
          Genoverse.Track.Crisprs.extend({
            id        : 'Bookmarked Crisprs',
            name      : 'Bookmarked Crisprs',
            url       : "[% c.uri_for('/api/crisprs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]&bookmarked_only=1" ,
            crispr_report_uri : "[%c.uri_for('/crispr')%]",
            urlParams : { crispr_filter: "[%crispr_filter%]", flank_size: "[%flank_size%]"}
          }),
[% END %]
          Genoverse.Track.Crisprs.extend({
            name      : 'Filtered Crisprs',
            id        : 'Filtered Crisprs',
            url       : "[% c.uri_for('/api/crisprs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]" ,
            ot_profile : {},
            view      : Genoverse.Track.View.FilterCrisprs,
            crispr_report_uri : "[%c.uri_for('/crispr')%]",
            urlParams : { crispr_filter: "[%crispr_filter%]", flank_size: "[%flank_size%]"}          
          }),
          [% IF 0 %]
          Genoverse.Track.Crisprs.extend({
            name      : 'Crisprs',
            id        : 'Crisprs',
            crispr_report_uri : "[% c.uri_for('/crispr') %]",
            url       : "[% c.uri_for('/api/crisprs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]" ,
            urlParams : { crispr_filter: "[%crispr_filter%]", flank_size: "[%flank_size%]"}              
          }),
          [% END %]

[% IF c.user %]
          Genoverse.Track.CrisprPairs.extend({
            id        : 'Bookmarked Crispr Pairs',
            name      : 'Bookmarked Crispr Pairs',
            url       : "[% c.uri_for('/api/crispr_pairs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]&bookmarked_only=1" ,
            pair_report_uri : "[%c.uri_for('/crispr_pair')%]",
            urlParams : { crispr_filter: "[%crispr_filter%]", flank_size: "[%flank_size%]"} 
          }),
[% END %]
          Genoverse.Track.CrisprPairs.extend({
            name      : 'Filtered Crispr Pairs',
            id        : 'Filtered Crispr Pairs',
            url       : "[% c.uri_for('/api/crispr_pairs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]" ,
            pair_report_uri : "[%c.uri_for('/crispr_pair')%]",
            urlParams : { crispr_filter: "[%crispr_filter%]", flank_size: "[%flank_size%]"},
            view      : Genoverse.Track.View.FilterCrisprPairs,
            ot_profile : {}
          }),
          [% IF 0 %]
          Genoverse.Track.CrisprPairs.extend({
            name      : 'Crispr Pairs',
            id        : 'Crispr Pairs',
            url       : "[% c.uri_for('/api/crispr_pairs_in_region')%]" + "?chr=__CHR__&start=__START__&end=__END__&assembly=[%genome%]&design_id=[%design_id%]" ,
            pair_report_uri : "[%c.uri_for('/crispr_pair')%]",
            urlParams : { crispr_filter: "[%crispr_filter%]", flank_size: "[%flank_size%]"} 
          }),
          [% END %]
          Genoverse.Track.Scaleline
        ]
      };

      document.addEventListener('DOMContentLoaded', function () { window.genoverse = new Genoverse(genoverseConfig); });
    </script>
    
    <div id="genoverse" class="span12"></div>

    <strong>Crispr Colour Key:</strong>

      <div class="span6">
       <div style="background: [%colours.left_crispr%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 30px">Off-targets computed</div>

       <div style="background: [%colours.left_in_design%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 30px">Off-targets computed and crispr within a design</div>

       <div style="background: [%colours.no_ot_summary%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 30px">Off-targets not computed</div>

       <div style="background: [%colours.left_crispr%]; width: 20px; height: 20px; float: left"></div>
       <div style="background: [%colours.right_crispr%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 50px">Crispr pair</div>

       <div style="background: [%colours.left_in_design%]; width: 20px; height: 20px; float: left"></div>
       <div style="background: [%colours.right_in_design%]; width: 20px; height: 20px; float: left"></div>
       <div style="margin-left: 50px">Crispr pair within a design</div>

    </div>
