[% META title = "WGE"; META tab_name = "Home" %]

<script type="text/javascript">
  $(document).ready(function() {
    //add autocomplete to the gene box
    $('#gene').autocomplete( {
        autoFocus: true,
        source: function (request, response) {
          $.get('api/gene_search', { name: request.term, species: get_species() }, 
            function (data) {
              response(data); 
            })
           .fail(ajax_failed);
        },
        select: function (event, ui) {
          strip_error( $(this) ); //error no longer valid
          $.get('api/exon_search', { marker_symbol: ui.item.value, species: get_species() },
            function (data) {
              //console.log(data);
              $("#exons").find('option').remove(); //clear old exons
              $("#exon_label").html("Exons for " + data.transcript);
              //add new exons into the form
              $.each(data.exons, function(i, val) { 
                $("#exons").append($('<option>', { 
                    value: val.exon_id,
                    text : val.rank + '. ' + val.exon_id + ' (length ' + val.len + ')'
                }));
              });
            });
        },
        minLength: 2
    } );

    //when someone clicks find paired crisprs create a table of the data
    $("#search").click(function (event) {
      //stop it from submitting the form
      event.preventDefault();

      if( ! form_valid() ) {
        return;
      }

      $("#search").button('loading');
      $("#crispr_table").remove(); //we want to keep the headings tbh. fine for now
      var table = get_pairs();
    });
    
    //if someone selects a species then remove the error class
    $("#crispr_search").find('input[type=radio]').click(function() { 
      strip_error( $(this) );
    });

    $("#exons").click(function() {
      strip_error( $(this) );
    });

  });

  //find parent div of whatever jquery object is passed
  function strip_error(item) {
    item.closest("div").removeClass("has-error");
  }

  function get_selected_exons() {
    return $("#exons").find('option:selected').map(function() { return this.value }).get();
  }

  function get_selected_pairs() {
    return $('input[name=pair]:checked').map( function() { 
      var spl = this.value.split("_");
      return { left_id: spl[0], right_id: spl[1] };
    } );
  }

  function get_pairs() {
    //get all the selected exon ids
    var exons = get_selected_exons();

    //create a table or clear the existing one.
    var table = get_table();

    //get the pairs and add them to the table
    $.get('api/pair_search', { exon_id: exons }, 
      function(data) {
        if (data.length == 0) {
          var num_cols = table.find("thead tr:nth-child(2) th").length;
          $("<tr>").append("<td colspan='"+num_cols+"'>None found!</td>" ).appendTo(table.find("tbody"));
        }
        else {
          //console.log(data);
          //add each crispr to the table, its a hash of arrays.
          $.each(data, function(exon_id, crisprs) {
            //each exon has a list of crisprs
            $.each(crisprs, function(idx, pair) {
              var pair_id = pair.left_crispr.id + "_" + pair.right_crispr.id;
              var status;
              if( pair.db_data && pair.db_data["status_id"] != 0 ) {
                var text = pair.db_data["status"].toString().capitalise();

                status = $("<a>", { href: "[% c.uri_for('/crispr_pair') %]/"+pair_id, text: text });
              }
              else {
                //if it has no off target data add a button to get it
                status = $("<button>", {
                  "class": 'btn btn-mini btn-block ots-button',
                  value: pair_id, 
                  text: "Find off targets" 
                });
                status.click( function(event) {          
                    //stop it from submitting the form
                    event.preventDefault();

                    //should define this function elsewhere instead of each time...

                    //create a link to view the pair and hide the submit button
                    var a = $("<a>", { href: "[% c.uri_for('/crispr_pair') %]/"+pair_id, text: "Pending" });
                    $(this).after(a).hide();

                    var ids = this.value.split("_");
                    var data = find_off_targets_for_pair(ids[0], ids[1]);

                    console.log( data );
                });
              }

              var row = 
                $("<tr>", { style: "font-size: 13px"})
                 .append( $("<td>", { html: pair.spacer }) )
                 .append( $("<td>", { html: status } ) )
                 .append( get_crispr_row(pair.left_crispr) )
                 .append( get_crispr_row(pair.right_crispr) )
                 .appendTo( table.find("tbody") );

              //add a column to the left of each group
              if ( idx == 0 ) {
                row.prepend( $("<td>", { html: exon_id, rowspan: crisprs.length }) );
              }
            });
          });
        }
        //change the loading button
        $("#search").button('reset');
        
        //todo: change this to be an entire exon search button
        create_genoverse_button();
        //create_offtargets_button();
      })
    
     .fail(ajax_failed); //create error if its not successful

    return table;
  }

  function get_pair_checkbox(pair_id) {
    return $("<td>").append( $("<input type='checkbox' name='pair'>").val(pair_id) ); 
  }

  function create_genoverse_button(){
    if( $("#genoverse").length){
      // Don't create it again
      return;
    }
    $("#fields").append($( "<button class='btn btn-default' id='genoverse'>").text("View in Genome Broswer") );
    $("#genoverse").click(function(event) {
        
        event.preventDefault();

        var url = "[% c.uri_for('/genoverse_browse') %]";
        var exon = get_selected_exons();
        var full_url = url.concat("?view_paired=1&exon_id=",exon);
        console.log(full_url);
        window.location.href=full_url;
    });
  }

  function create_offtargets_button(){
    if( $("#offtargets").length ){
      // Don't create it again
      return;
    }
    
    $("#fields").append($( "<button class='btn btn-default' id='offtargets'>").text("Find Off-Targets")  );
    $("#offtargets").click(function(event) {          
      //stop it from submitting the form
      event.preventDefault();
      
      var selectedpairs = get_selected_pairs();

      if ( selectedpairs.length == 0 )
        return;

      //for now just take the top pair as we only care about one for now
      var temp = selectedpairs[0];
      temp.species = get_species();
      
      $.get('api/pair_off_target_search', temp, 
      function(data) { 
        console.log(data);
      });
    });
  }
  
  //return whatever species is selected
  function get_species() {
    return $("input:radio[name=species]:checked").val();
  }

  //return crispr data as html
  function get_crispr_row(crispr) {
    var location = crispr.chr_name + ':' + crispr.chr_start + '-' + (crispr.chr_end);
    var id_link  = $("<a>", { href: "[% c.uri_for('/crispr') %]/" + crispr.id, html: crispr.id });
    var summary = "";

    if ( crispr.off_target_summary !== null && crispr.off_target_summary.length > 0 ) {
      for ( var i = 0; i < crispr.off_target_summary.length; i++ ) {
        summary += i + ": " + crispr.off_target_summary[i] + "<br/>";
      }
    }
    else {
      summary = "No data";
    }

    return [ 
             $("<td>").append( id_link ),
             $("<td>").append( get_ensembl_link(location, get_species()) ),
             $("<td>", { html: crispr.seq }),
             $("<td>", { html: summary } ) 
    ];
  }

  function get_crispr_header() {
    //return table headers for a crispr.
    var fields = [ "ID", "Location", "Seq", "Off targets" ];

    //return a list of th elements
    return $.map(fields, function (name) { return $("<th>", { "html": name }); });
  }

  /*
    change the table to show pairs separately,
    add summary data for pair and crispr
    need a link to individual page,
    and one to pair page.
    need to find pairs that already have off target data using id,
    change checkbox to button
    individual crisprs?
  */

  function get_table() {
    //make a table if it doesn't exist
    var table = $("#pair_table");
    if ( $("#pair_table").length ) {
      table.find("tbody").empty(); //only leave the headers if the table exists
    }
    else {
      //create table
      table = $("<table>", { "class": 'table table-bordered table-condensed table-hover', style: "max-width: none;", id: 'pair_table' })
                .append( $("<thead>") )
                .append( $("<tbody>") );

      //grouping
      $("<tr>")
        .append($("<th>", { html: "Pair", colspan: 3, "class": "group-header" }))
        .append($("<th>", { html: "Left Crispr", colspan: 4, "class": "group-header" }))
        .append($("<th>", { html: "Right Crispr", colspan: 4, "class": "group-header" }))
        .appendTo( table.find("thead") );

      //add headers
      //$("<tr>").append( $("<th>" ) )
     $("<tr>")
     .append( $("<th>", { text: "Exon ID" }) )
     .append( $("<th>", { text: "Spacer" }) )
     .append( $("<th>", { text: "Status" }) )
     .append( get_crispr_header() )
     .append( get_crispr_header() )
     .appendTo( table.find("thead") );

      //insert the table into the dom
      //should make this function accept an object to add the table to maybe
      $("#crispr_search").append(table);
    }

    return table;
  }

  //old method before we were getting pairs to display single crisprs.
  //might be useful later
  function get_crisprs() {
    //get all the selected exon ids
    var exons = $("#exons").find('option:selected').map(function() { return this.value });

    //make a table. this should only be done once -- stupid
    var table = $("<table>", { "class": 'table table-bordered .table-hover', id: 'crispr_table' });
    var header = $("<tr>").appendTo( $("<thead>") )
                          .append( $("<th>", { html: "Exon ID" }) )
                          .append( $("<th>", { html: "Location" }) )
                          .append( $("<th>", { html: "Seq" }) )
                          .appendTo( table );

    //get the crisprs
    $.get('[% request.uri_base %]/api/crispr_search', { exon_id: exons }, 
      function(data) { 
        console.log(data);
        //add each crispr to the table, its a hash of arrays.
        $.each(data, function(exon_id, crisprs) {
          //each exon has a list of crisprs
          $.each(crisprs, function(idx, crispr) {
            var location = crispr.chr_name + ':' + crispr.chr_start + '-' + crispr.chr_end;
            var row = $("<tr>").append( $("<td>", { html: exon_id }) )
                               .append( $("<td>", { html: location }) )
                               .append( $("<td>", { html: crispr.seq }) )
                               .appendTo( table );
          });
        });
    })
     .fail(ajax_failed);

    return table;
  }

  function form_valid() {
    if ( ! get_species() ) {
      console.log("Please choose a species.");
      $("#species").addClass("has-error");
      return false;
    }
    else if ( $("#gene").val() == "" ) {
      console.log("No marker symbol provided.");
      $("#marker_symbol").addClass("has-error");
      return false;
    }
    else if ( ! get_selected_exons().length ) {
      console.log("Please choose an exon.");
      $("#exon_id").addClass("has-error");
      return false;
    }

    return true; 
  }
</script>

<div class="row">
  <div class="span12">

    <form role="form" id="crispr_search">
      <fieldset id="fields">
        <legend>Paired Crispr Search</legend>
        <div class="form-group" id="species">
          <label class="control-label">Species</label>
          <label class="radio">
            <input type="radio" name="species" id="radio_mouse" value="Mouse" />Mouse
          </label>
          <label class="radio">
            <input type="radio" name="species" id="radio_human" value="Human" />Human
          </label>
        </div>
        <br/>
        <div>
          <div class="form-group" id="marker_symbol">
            <label class="control-label">Marker Symbol</label>
            <input type="text" class="form-control span4" id="gene" placeholder="Enter gene" autocomplete="off" />
          </div>
          <br/>
          <div class="form-group" id="exon_id">
            <label class="control-label" id="exon_label">Exons</label>
            <select multiple="multiple" class="form-control span4" name="exons" id="exons" autocomplete="off"></select>
          </div>
          <br/>
          <button class="btn btn-default" id="search" autocomplete="off">Find paired crisprs</button>
        </div>
      </fieldset>
      <br/>
    </form>

  </div>
</div>
