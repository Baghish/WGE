[%- META title = "Novel CRISPR Report"; META tab_name = "crispr"; META header_text = "Novel CRISPR Summary" -%]
[% PROCESS utils.tt %]

[%# don't show the crispr table if there's no data %]
[% RETURN UNLESS data %]

[% crispr_grna = crispr_fwd_seq.substr(0, 20) %]
[% crispr_pam =  crispr_fwd_seq.substr(20, 3) %]

<style type="text/css">
.seq {
  font-family:Consolas,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New, monospace;
  font-size:15px;
}
.mismatch {
    font-weight: bold;
    color: #FF0000;
}
</style>

<script type="text/javascript">
  //we use this for doing the mismatch counts
  var crispr_grna = "[% crispr_grna %]";
  var crispr_pam  = "[% crispr_pam %]"
  var species     = "[% species %]";

  //split seq into grna and pam
  $(document).ready( function() {


    var rows = new Array([], [], [], [], []);
    var total_erroneous = 0;
    $("#offtarget_table .ots").each(function() {
      var tr = $(this);

      //find sequence and get match data
      var seq = tr.children(".seq");
      var match = crispr_grna.match_str( seq.text().substr(0, 20) );

      //update the rows
      seq.html(match.str + " " + seq.text().substr(20, 3));
      tr.children(".mm").text(match.total);
      if(match.total == 0){
        tr.addClass('error');
        create_alert("This is not a novel crispr - it exists in the genome. See row highlighted in red.")
      }

      //exclude 4 because by removing everything else they'll already be sorted
      if ( match.total < 4 ) {
        rows[match.total].push(tr);
      }

      //quick hack to remove the handful of CC-GG matches
      //that aren't right. need to stop persisting them.
      if ( match.total > 5 ) {
        tr.hide();
        total_erroneous++;
      }
    });

    var t = $("#total_offs");
    if( t.text() != 'No data') { //only do this if there's data
      t.text( t.text() - total_erroneous );
    }

    //order everything by number of mismatches
    var tbl_top = $("#spacer_row");
    for ( var mm = rows.length-1; mm >= 0; mm-- ) {
      for ( var i = rows[mm].length-1; i >= 0; i-- ) {
        rows[mm][i].insertAfter( tbl_top );
      }
    }
  });


</script>

<div class="well">

  <table class="crispr_report_table">

  <table>
    <tr>
      <td>Species</td>
      <td>[% species %]</td>
    </tr>
    <tr>
      <td>Sequence</td>
      <td>[% crispr_seq %]</td>
    </tr>
    <tr>
      <td>Orientation</td>
      <td>[% pam_right == "true" ? "pam_right" : "pam_left" %]</td>
    </tr>
    <tr>
      <td>Off-target summary</td>
      <td>[% data.off_target_summary or 'No data' %]</td>
    </tr>
    <tr>
      <td>Total off-targets</td>
      <td id="total_offs">[% data.off_targets.size or 'No data' %]</td>
    </tr>
  </table>
</div>

<h3>Off-Target Sites</h3>

[%# if we have no off targets to show hide the table %]
[%# RETURN UNLESS data.off_targets.size %]

<table class='table table-bordered table-hover' id='offtarget_table'>
  <tr>
    <th>Location</th>
    <th>Sequence</th>
    <th>Mismatches</th>
    <th>Strand</th>
    <th>Type</th>
  </tr>
  <tr>
    <td>Original CRISPR</td>
    <td class="seq">
      [%- crispr_grna _ " " _ crispr_pam -%]
      [%- IF pam_right=="false" -%]
        <span style="font-size:8px;vertical-align:sub;">(reversed)</span>
      [%- END -%]
    </td>
    <td></td>
    <td></td>
    <td>[% type(c=crispr) %]</td>
  </tr>
  <tr id="spacer_row"><td colspan="5"></td></tr>
[% FOREACH off_target IN data.off_targets %]
  <tr class="ots">
    <td class="location">[% ensembl_link(chr_name=off_target.chr_name, chr_start=off_target.chr_start, chr_end=off_target.chr_end) %]</td>
    <td class="seq">[% off_target.seq %]</td>
    <td class="mm"></td>
    <td>[% display_strand(pam_right=off_target.pam_right) %]</td>
    <td>[% type(c=off_target) %]</td>
  </tr>
[% END %]
</table>