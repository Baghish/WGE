[% META title = "Find CRISPR by sequence"; META tab_name = "crispr"; META header_text = "Find CRISPR by sequence"; %]
[% PROCESS utils.tt %]

<style type="text/css">
.wordwrap {
   white-space: pre-wrap;      /* CSS3 */
   white-space: -moz-pre-wrap; /* Firefox */
   white-space: -pre-wrap;     /* Opera <7 */
   white-space: -o-pre-wrap;   /* Opera 7 */
   word-wrap: break-word;      /* IE */
}
</style>

<script type="text/javascript">
var searching = false;
$(document).ready(function() {
    //colour assemblies with code from wge-utils
    colour_species();

    $("#bulk").click(function(event) {
      process_text();
    });

    $("#reset").click(function(event) {
      //empty results
      $("#results_table tbody").empty();
      $("#results_container").hide();

      //hide this button
      $(this).hide();

      $("#bulk_placeholder").text(""); //clear previous text
      $("#seq_block").val(""); //clear text field
      $("#bulk_form").children().show(); //re-display form
    });

    $("#search").click(function(event) {
        event.preventDefault();

        var seq = $("#seq").val().toUpperCase();
        var pam_right = get_strand();
        var species = get_species(); //get on click so if they change it its ok

        if ( seq.length != 20 ) {
            create_alert("Sequence length must be 20 (" + seq.length + " provided)");
            return;
        }

        if ( ! /^[ACGT]+$/.test(seq) ) {
            create_alert("Sequence must contain the letters A, C, G or T only");
            return;
        }

        var table = $("#results_table tbody");

        table.empty(); //delete anything that is in the table
        $("#results_container").show();
        $("#spinner").show();

        get_seq_data({ "seq": seq, "species": species, "on_completion": add_matches_to_table});
    });

    $("#seq_block").change(function(event) {
      var s = $(this);
      //strip all whitespace from the box
      s.val( s.val().replace(/\s/g, "") );
    });
});

//args must have seq and species
//by default we don't consider PAM sequence and we get db data
function get_seq_data(args) {
    args.pam_right = (args.pam_right === undefined) ? 2: args.pam_right;
    args.get_db_data = (args.get_db_data === undefined) ? 1 : args.get_db_data;

    $.getJSON(
        "[% c.uri_for('/api/search_by_seq') %]",
        {"seq": args.seq, "pam_right": args.pam_right, "get_db_data": args.get_db_data, "species": args.species},
        function (data) {
            //console.log(data);

            //allow optional method to run when finished
            if (args.on_completion !== undefined) {
                args.data = data;
                args.on_completion(args);
            }
        }
    ).fail(function() {
        create_alert("Error: Searching failed");
        $("#spinner").hide();
        $("#results_container").hide();
        $("#results_table").hide();
    });
}

function add_matches_to_table(args) {
    if (args.data === undefined) return;

    $("#spinner").hide();

    if ( args.data.error ) {
      create_alert( args.data.error );
      $("#results_container").hide();
      return;
    }

    $("#results_table").show();

    var table = $("#results_table tbody");

    if ( args.data.length == 0 ) {
      var num_cols = $("#results_table thead th").length;
      $("<tr>").append(
        $("<td>", { "colspan": num_cols, "style": "text-align:center;", text: "No results found" })
      ).appendTo(table);

      return;
    }

    //add every returned result into the table and make the text highlight on user selection
    $.each(args.data, function(i, val) {
      var row = process_row(i, val, args.species)
      if ( args.hover_text !== undefined && args.original_text !== undefined ) {
        //use a closure to keep track of the right text to substitute
        row.hover(
          function(event) { if (!searching) $("#bulk_placeholder").html(args.hover_text) },
          function(event) { if (!searching) $("#bulk_placeholder").html(args.original_text)}
        );
      }

      row.appendTo(table);
    });
}

function process_row(i, val, species) {
    var location = val.chr_name + ":" + val.chr_start + "-" + val.chr_end;

    var row = $("<tr>");
    var cells = [
      $("<td>").append( $("<a>", {href: "[% c.uri_for('/crispr') %]/" + val.id, text: val.id}) ),
      $("<td>").append( get_ensembl_link(location, species) ),
      $("<td>", {text: val.genic ? "Yes" : "No"}),
      $("<td>", {text: val.exonic ? "Yes" : "No"}),
      $("<td>", {text: val.off_target_summary || "-"}),
      $("<td>").append( $("<a>", {href: "[% c.uri_for('/genoverse_browse', {view_single => 1}) %]&crispr_id=" + val.id, "class":"btn", target:"_blank", text: "View in Genoverse"}) ),
    ];

    return row.append( cells );
}


function process_text() {
  var species = get_bulk_species();

  if ( ! species ) {
    create_alert("Please select a species");
    return;
  }

  var text = $("#seq_block").val().replace(/\s/g, "").toUpperCase();
  if ( ! /^[ACGT]+$/.test(text) ) {
    create_alert("Sequence must contain the letters A, C, G or T only");
    return;
  }

  if ( text.length > 250 ) {
      create_alert("Sequence length must be less than 250 (" + text.length + " provided)");
      return;
  }

  var crisprs = find_crisprs(text);
  //console.log(crisprs);

  if ( ! crisprs.length ) {
    create_alert("Couldn't find any CRISPRs in the provided sequence.");
    return;
  }

  $("#bulk_form").children().hide();
  $("#bulk_placeholder").text(text);

  var table = $("#results_table tbody");
  table.empty(); //delete anything that is in the table
  $("#results_container").show();

  var it = new Iterator(crisprs);

  searching = true; //set global var to let other funcs know we're looping

  search_by_seq(text, it, species);
}

function get_species() {
    return $("input:radio[name=species]:checked").val();
}

//should make this 1 method really but im still undecided on the layout
function get_bulk_species() {
    return $("input:radio[name=bulk_species]:checked").val();
}

function get_strand() {
    return $("input:radio[name=strand]:checked").val();
}

function find_crisprs(text) {
  var crisprs = [];
  var res = {"left": /CC[ACGT]([ACGT]{20})/g, "right": /([ACGT]{20})[ACGT]GG/g};

  for (var key in res) {
    var re = res[key];
    while ( (match = re.exec(text)) != null ) {
      //console.log("idx:" + match.index);
      //console.log(match);
      re.lastIndex -= 22;

      crisprs.push({"start": match.index, "grna": match[1], "type": key});
    }
  }

  crisprs.sort( function(a, b) { return a.start - b.start } );
  return crisprs;
}

/*
  Note: the ids will all be sequential, so we could just get the first and the last ids, the rest are obvious
*/

function search_by_seq(text, crispr_iterator, species) {
  if( ! crispr_iterator.hasNext() ) return;
  var crispr = crispr_iterator.next();

  var split = highlight_crispr(text, crispr);

  $("#bulk_placeholder").html( split.pre + split.full_crispr + split.post );

  get_seq_data({
    "seq": split.grna,
    "species": species,
    "on_completion": function(args) {
        //add this text to the table row so we can show which crispr they are hovering over
        args.hover_text = split.pre + split.full_crispr + split.post;
        args.original_text = text;
        //display this data in the table
        add_matches_to_table(args);

        //if we have more crisprs call this function recursively
        if ( crispr_iterator.hasNext() ) {
          search_by_seq(text, crispr_iterator, species);
        }
        else {
          searching = false; //we are no longer searching
          //we have no more crisprs so restore the text
          $("#bulk_placeholder").text( text );
          $("#reset").show();
          console.log("finished processing text");
        }
    }
  });
}

function highlight_crispr(text, crispr) {
  var pre  = text.substring( 0, crispr.start );
  var pam, grna;
  if ( crispr.type == "left" ) {
    pam  = text.substring( crispr.start, crispr.start + 3 );
    grna = text.substring( crispr.start + 3, crispr.start + 23 );
    //console.log("l: " + pam + grna)
  }
  else if ( crispr.type == "right" ) {
    pam  = text.substring( crispr.start + 20, crispr.start + 23);
    grna = text.substring( crispr.start, crispr.start + 20 );
    //console.log("r:" + grna + pam);
  }
  else {
    console.log("Unknown type:" + crispr.type);
    return;
  }

  pam = "<span class='pam' style='color:#00B236'>" + pam + "</span>";
  var mid = crispr.type == "left" ? pam + grna : grna + pam;
  mid = "<span class='selected_crispr' style='color:#FF1C19'>" + mid + "</span>";
  var post = text.substring( crispr.start + 23 );

  return { "pre": pre, "full_crispr": mid, "post": post, "grna": grna, "pam": pam };
}

function Iterator(list) {
  this.list = list;
  this.index = 0;
  this.hasNext = function() { return this.index < this.list.length; };
  this.next = function() { return this.list[this.index++]; };
  this.reset = function() { this.index = 0; };
}

</script>



<div class="row">
  <div class="span10 offset1">
    <h4>Please note that this application is currently in beta. If you have any problems, please <a href="mailto:[% email %]">let us know</a>.</h4>
    <br/>

    <div class="well">
      <div>
        <h5 style="text-align:center">Find CRISPRs in genomic sequence</h5>
      </div>
      <form role="form" id="crispr_search" class="form-horizontal">
        <fieldset id="fields">
          <div id="bulk_placeholder" class="wordwrap"></div><br/>
          <button class="btn" id="reset" style="display:none;">Search Again</button>
              <div id="bulk_form">
                  <label class="control-label">Sequence</label>
                  <div class="controls">
                    <textarea class="input-xxlarge" rows="5" name="seq_block" id="seq_block" placeholder="Paste sequence here (max 250bp)"></textarea>
                  </div>
                  <label class="control-label">Species</label>
                  <div class="control-group" id="bulk_species">
                    <div class="controls">
                      [% FOR s IN species %]
                        <label class="radio">
                          <input type="radio" name="bulk_species" value="[% s.id %]" />
                          <div class="species_label">[% s.display_name %]</div>
                        </label>
                      [% END %]
                    </div>
                  </div>
                  <div class="control-group">
                      <div class="controls">
                          <button class="btn" id="bulk">Find CRISPRs</button>
                      </div>
                  </div>
              </div>
          </fieldset>
        </form>
    </div>

    <div class="well">
      <div>
        <h5 style="text-align:center">Find CRISPR from gRNA</h5>
        <p>To find a single CRISPR within WGE please paste a 20bp gRNA into the box below. Your gRNA sequence should not include the PAM site (CCN/NGG)</p>
      </div>

      <hr />

      <form role="form" id="crispr_search" class="form-horizontal">
        <fieldset id="fields">
          <div class="control-group" id="sequence">
            <label class="control-label">Sequence</label>
            <div class="controls">
              <input type="text" class="form-control span4" id="seq" placeholder="Enter Sequence" />
            </div>
          </div>
          <div class="control-group" id="species">
            <label class="control-label">Species</label>
            <div class="controls">
              [% FOR s IN species %]
                <label class="radio">
                  <input type="radio" name="bulk_species" value="[% s.id %]" />
                  <div class="species_label">[% s.display_name %]</div>
                </label>
              [% END %]
            </div>
          </div>
          <!--
          <div class="control-group" id="strand">
            <label class="control-label">Strand</label>
            <div class="controls form-inline">
              <label class="radio inline">
                <input type="radio" name="strand" id="radio_plus" value="1" />+
              </label>
              <label class="radio inline">
                <input type="radio" name="strand" id="radio_minus" value="0" />-
              </label>
            </div>
          </div>
          -->
          <div class="control-group">
            <div class="controls">
              <button class="btn btn-default" id="search" autocomplete="off">Find CRISPRs</button>
            </div>
          </div>
        </fieldset>
      </form>
    </div>

    <div class="well" id="results_container" style="display:none;">
      <div style="text-align: center; margin: 20px auto;" id="spinner">
        <img src="[% c.uri_for( '/static/images/spinner-circle.gif' ) %]"/>
      </div>
        <!-- <h3>The following crisprs were found:</h3> -->
      <div id="results">
        <table class="table" id="results_table" style="display:none;">
          <thead>
            <th>Crispr ID</th>
            <th>EnsEMBL</th>
            <th>In gene</th>
            <th>In exon</th>
            <th>Off Targets</th>
            <th></th>
          </thead>
          <tbody>
          </tbody>
        </table>
      </div>
    </div>

  </div>
</div>
