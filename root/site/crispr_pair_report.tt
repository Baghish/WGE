[% PROCESS utils.tt %]

[% META title = "CRISPR Pair Report"; META tab_name = "crispr"; META header_text = "CRISPR Pair Summary" %]

[% RETURN UNLESS pair %]
<style type="text/css">
.mismatch {
  color: #FF0000;
}
</style>

<script type="text/javascript">
  //these vars come from template toolkit
  var species     = "[% species %]";
  var pair_id     = "[% pair.left_crispr.id _ '_' _ pair.right_crispr.id %]";

  //we use this for doing the mismatch counts
  var l_seq   = "[% pair.left_crispr.seq %]";
  var r_seq   = "[% pair.right_crispr.seq %]";


  //split seq into grna and pam
  $(document).ready( function() {

    //function to handle bookmarking of crispr pair
    $("#bookmark").click(function (event){
      event.preventDefault();
      var b = document.getElementById("bookmark");
      var uri = "[% c.uri_for('/bookmark_crispr_pair') %]";

      toggle_bookmark(b, uri, pair_id, "Crispr Pair");
    });

    //quick hack to sort the pairs so i can get a screenshot
    var rows = {};
    var keys = [];
    $("#offtarget_table .ots").each(function() {
      var tr = $(this);

      //this is pretty hacky, we basically recompute the mismatches,
      //but we do that in the individual page too, so whatever I guess

      //colour both the left and right off target
      //seqs[0] is the left, seqs[1] is the right
      var seqs = tr.children(".seq"), mm = tr.children(".mm");
      for ( var i = 0; i < 2; i++ ) {
        var seq = $( seqs[i] );
        var summary = check_str( seq.text() );

        seq.html( summary.str );
        $(mm[i]).text( summary.total + " (" + summary.match + ")" );
      }

      var spacer = parseInt( $(this).children(".spacer").text() );

      //only add unique spacer lengths to the keys array
      //as everything is stored in an array
      if (rows[spacer]) {
        rows[spacer].push(tr);
      }
      else {
        keys.push(spacer);
        rows[spacer] = [tr];
      }

    });

    //sort keys with biggest first
    var tbl_top = $("#spacer_row");
    keys.sort(function(a,b) { return b - a; });

    //insert each element above the last, so smallest is first
    for ( var i = 0; i < keys.length; i++ ) {
      //we group by spacer which means some of the items here are an array,
      //if they have the same spacer length.
      var spacer_rows = rows[keys[i]];
      for ( var j = 0; j < spacer_rows.length; j++ ) {
        spacer_rows[j].insertAfter( tbl_top );
      }
    }

    //move the original one to the top of the table
    $("#offtarget_table .info").insertAfter( tbl_top );

    //add functionality to off target button
    $(".ots-button").click( function(event) {
        //stop it from submitting the form
        event.preventDefault();

        $(this).hide();
        $('#offtarget_table tr:last').after('<tr><td colspan="9" style="text-align: center" id="progressbar">Computing off-targets now..<div class="progress progress-striped active"><div class="bar" style="width: 100%"></div></div></td></tr>');
        var ids = this.value.split("_");
        $.when( find_off_targets_for_pair(species, ids[0], ids[1]) ).done(function (){
            location.reload();
        });
    });

  });

function check_str(text) {
  text_r = text.revcom();

  //get all possible matches
  var all = [
    l_seq.match_str(text,   {"match": "Left Fwd"}),
    l_seq.match_str(text_r, {"match": "Left Rev"}),
    r_seq.match_str(text,   {"match": "Right Fwd"}),
    r_seq.match_str(text_r, {"match": "Right Rev"})
  ];

  var smallest = all[0];

  for (var i=1; i < all.length; i++) {
    if ( all[i].total < smallest.total ) {
      smallest = all[i];
    }
    else if ( all[i].total == smallest.total ) {
      //TODO: something useful here? this is probably adequate
      console.log("Found identical mismatch counts for " + text);
      smallest.match += ", " + all[i].match;
    }
  }

  return smallest;
}
</script>

<div class="well">

  <table class="crispr_report_table">
  <tr>
    <td><h4>ID: [% pair.id %]</h4></td>
    <td>
  <a class='btn btn-info pull-right' href="[% c.uri_for( '/genoverse_browse', { crispr_pair_id => pair.id, view_paired => 1 }) %]">
      <i class="icon-eye-open icon-white"></i>
      View in Genome Browser
  </a>
    </td>
  <tr>
    <td><h4>Spacer: [% pair.spacer %]</h4></td>
    <td>
  [% IF c.user %]
   <button class="btn btn-info pull-right" id="bookmark">
   [% IF is_bookmarked %]
     Remove Bookmark
   [% ELSE %]
     Bookmark Crispr Pair
   [% END %]
   </button>
  [% END %]
    </td>
  </tr>
  </table>

  <table class="table table-condensed">
    <thead>
      <tr>
        <th></th>
        <th>Left Crispr</th>
        <th>Right Crispr</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th>Crispr ID</th>
        <td><a href="[% c.uri_for('/crispr', pair.left_crispr.id) %]">[% pair.left_crispr.id %]</a></td>
        <td><a href="[% c.uri_for('/crispr', pair.right_crispr.id) %]">[% pair.right_crispr.id %]</td>
      </tr>
      <tr>
        <th>Species</th>
        <td>[% species_display_name %]</td>
        <td>[% species_display_name %]</td>
      </tr>
      <tr>
        <th>Location</th>
        <td class="location">[% ensembl_link(chr_name=pair.left_crispr.chr_name, chr_start=pair.left_crispr.chr_start, chr_end=pair.left_crispr.chr_end) %]</td>
        <td class="location">[% ensembl_link(chr_name=pair.right_crispr.chr_name, chr_start=pair.right_crispr.chr_start, chr_end=pair.right_crispr.chr_end) %]</td>
      </tr>
      <tr>
        <th>Sequence</th>
        <td>[% pair.left_crispr.seq %]</td>
        <td>[% pair.right_crispr.seq %]</td>
      </tr>
      <tr>
        <th>Strand</th>
        <td>[% display_strand(pam_right=pair.left_crispr.pam_right) %]</td>
        <td>[% display_strand(pam_right=pair.right_crispr.pam_right) %]</td>
      </tr>
      <tr>
        <th>Off-target summary</th>
        <td>[% pair.left_crispr.off_target_summary or 'No data' %]</td>
        <td>[% pair.right_crispr.off_target_summary or 'No data' %]</td>
      </tr>

      <tr>
        <th>Status</th>
        <td colspan="2">
          [%- IF pair.status.defined -%]
            [% pair.status %]
          [%- ELSE -%]
            Not started
          [%- END -%]
        </td>
      </tr>
    </tbody>
  </table>
</div>

<h3>Paired Off-Target Sites</h3>
<p><b>Note</b>: the row highlighted in blue is the original CRISPR pair<br/></p>
<p><b>Mismatch count</b>: Left/right refers to the CRISPR the off target matched. Fwd/rev is the orientation of the match.</p>

<table class='table table-bordered table-condensed' style="max-width: none;" id='offtarget_table'>
  <tr>
    <th>Spacer</th>
    <th colspan="4">Left Crispr</th>
    <th colspan="4">Right Crispr</th>
  </tr>
  <tr id="spacer_row">
    <th></th>
    <th>Location</th>
    <th>Sequence</th>
    <th>Mismatches</th>
    <th>Strand</th>
    <th>Location</th>
    <th>Sequence</th>
    <th>Mismatches</th>
    <th>Strand</th>
  </tr>
  <!-- <tr id="spacer_row"><td colspan="9"></td></tr>-->
[% FOREACH off_target IN pair.off_targets %]
  [% IF off_target.left_crispr.id == pair.left_crispr.id && off_target.right_crispr.id == pair.right_crispr.id  %]
    [% class = " info" %]
    [% ELSE %]
    [% class = "" %]
  [% END %]
  <tr class="ots[% class %]">
    <td class="spacer">[% off_target.spacer %]</td>
    [% FOREACH type IN ['left_crispr', 'right_crispr'] %]
    <td class="location">[% ensembl_link(chr_name=off_target.$type.chr_name, chr_start=off_target.$type.chr_start, chr_end=off_target.$type.chr_end) %]</td>
    <td class="seq">[% off_target.$type.seq %]</td>
    <td class="mm"></td>
    <td>[% display_strand(pam_right=off_target.$type.pam_right) %]</td>
    [% END %]
  </tr>
[% END %]
[% UNLESS pair.off_targets.size %]
  <tr>
    <td colspan="9" style="text-align: center">
      No off target data available for this pair!
      [% IF ! pair.status_id.defined || pair.status_id == 0 %]
      <button class="btn btn-block ots-button" value="[% pair.left_crispr.id %]_[% pair.right_crispr.id %]">Find off targets</button>
      [% END %]
    </td>
  </tr>
[% END %]
</table>
